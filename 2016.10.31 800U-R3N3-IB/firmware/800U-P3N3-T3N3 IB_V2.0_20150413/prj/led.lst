C51 COMPILER V9.52.0.0   LED                                                               11/15/2016 13:18:16 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE LED
OBJECT MODULE PLACED IN ..\UV4\led.obj
COMPILER INVOKED BY: C:\Program Files\kile\C51\BIN\C51.EXE ..\src\led.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRIN
                    -T(.\led.lst) TABS(2) OBJECT(..\UV4\led.obj)

line level    source

   1          
   2          #define AP_LED_GLOBALS  
   3          #include "extern_symbol.h" 
   4          
   5          
   6          ///////////////////////////////////////////////////////////////////////////////
   7          //   -----         -----        -----         -----         -----       -----
   8          //  |       |       |       |       |       |       |       |       |       |       |       |
   9          //  |       |       |       |       |       |       |       |       |       |       |       |
  10          //   -----         -----        -----         -----         -----         ----- 
  11          //  |       |       |       |       |       |       |       |       |       |       |       |
  12          //  |       |       |       |       |       |       |       |       |       |       |       |
  13          //   -----         -----        -----         -----         -----      ----- 
  14          //      
  15          //      1                 2               3               4                 5               6
  16          //  数码管显示程序处理流程:
  17          //  1)  sys.flag = ON:   ==> 允许数码管显示
  18          //  2)  ucShift:             ==> 显示第X位数码管
  19          //  3)  ed[ucShift].show==> 是否显示第X位数码管   
  20          ///////////////////////////////////////////////////////////////////////////////
  21          
  22          
  23          /*******************************************************************************
  24                                给当前显示led供电            
  25              Input :  UINT8 ucValue   //LED_RED, LED_GREEN, LED_BLUE 
  26              Output:  None 
  27          *******************************************************************************/
  28          void led_light_ctrl(UINT8 ucValue)
  29          {
  30   1        switch (ucValue)
  31   1        {
  32   2          case LED_RED:     LED_G_OFF; LED_B_OFF;  LED_R_ON;  break;    
  33   2          case LED_GREEN:   LED_R_OFF; LED_B_OFF;  LED_G_ON;  break;
  34   2          case LED_BLUE:    LED_R_OFF; LED_G_OFF;  LED_B_ON;  break;
  35   2          
  36   2          case LED_RG:      LED_B_OFF; LED_R_ON;   LED_G_ON;  break;    
  37   2          case LED_RB:    LED_G_OFF; LED_R_ON;   LED_B_ON;  break;
  38   2          case LED_GB:    LED_R_OFF; LED_G_ON;   LED_B_ON;  break;
  39   2          case LED_RGB:   LED_R_ON;  LED_G_ON;   LED_B_ON;  break;      
  40   2          default:      LED_R_OFF; LED_G_OFF; LED_B_OFF;break;
  41   2        }
  42   1      }
  43          /*******************************************************************************
  44                      清除所有显示
  45            input:   none     
  46            output:  none         
  47          *******************************************************************************/
  48          void Display_Clear(void)
  49          {
  50   1          if( (TRUE == Key.b.Short) )
  51   1        {
  52   2            ClearFlg = ON;
  53   2        }
  54   1          else
C51 COMPILER V9.52.0.0   LED                                                               11/15/2016 13:18:16 PAGE 2   

  55   1        {
  56   2            ClearFlg = OFF;
  57   2          led_flash_NO = LED_NONE;
  58   2          led_light_ctrl(LED_NONE);
  59   2        }
  60   1      }
  61          
  62          
  63          
  64          /*******************************************************************************
  65            获取灯亮时间，单位ms   100ms为单位
  66            Input :   none
  67            Output :  返回亮的时间倍数
  68          *******************************************************************************/
  69          
  70          UINT16 GetLedOnTime()
  71          {
  72   1        UINT16 unRet ;
  73   1        switch(led_flash_mode)
  74   1        {
  75   2          case LED_FLASH_MODE_2V1:  unRet = led_flash_period*2; break;
  76   2          case LED_FLASH_MODE_5V1:  unRet = led_flash_period*5; break;
  77   2          case LED_FLASH_MODE_10V1: unRet = led_flash_period*10;break;
  78   2          default:          unRet = led_flash_period; break;
  79   2        }
  80   1        return(unRet);
  81   1      }
  82          /*******************************************************************************
  83            获取灯灭时间，单位ms   100ms为单位
  84            Input :   none
  85            Output :  返回灭的时间倍数
  86          *******************************************************************************/
  87          
  88          UINT16 GetLedOffTime()
  89          {
  90   1        UINT16 unRet ;
  91   1        switch(led_flash_mode)
  92   1        {
  93   2          case LED_FLASH_MODE_1V2:  unRet = led_flash_period*2; break;
  94   2          case LED_FLASH_MODE_1V5:  unRet = led_flash_period*5; break;
  95   2          case LED_FLASH_MODE_1V10: unRet = led_flash_period*10;break;
  96   2          default:          unRet = led_flash_period; break;
  97   2        }
  98   1        return(unRet);
  99   1      }
 100          /*******************************************************************************
 101                      指示灯闪烁控制模式
 102            input:   
 103                led_flash_period:      闪烁时间间隔
 104                led_flash_NO:          闪烁灯序号
 105                led_flash_mode:        闪烁模式
 106            output:  none         
 107          *******************************************************************************/
 108          void CMD_led_flash(void)
 109          {
 110   1          //LED指示灯控制    
 111   1        INT8U led_sts,led_mode;
 112   1      
 113   1        if( (TRUE == Key.b.Short) )//&&(KeyPressLed < MAX_KEYPRESSLED) )
 114   1        {   // 有按键按下，则根据F5参数亮灯
 115   2          led_mode = LED_FLASH_MODE_ALWAYS;
 116   2      
C51 COMPILER V9.52.0.0   LED                                                               11/15/2016 13:18:16 PAGE 3   

 117   2          if(para.str.KeyPressLed >= MAX_KEYPRESSLED) 
 118   2          {
 119   3            led_sts = led_flash_NO+1;
 120   3            if(led_sts >= MAX_KEYPRESSLED)
 121   3            { led_sts = LED_RED; }
 122   3          }
 123   2          else
 124   2          { led_sts = para.str.KeyPressLed; }//KeyPressLed;  }      
 125   2        }             
 126   1        else
 127   1        {   // 无按键按下
 128   2           if( (digital_led_loading == ON) )
 129   2             { led_sts = LED_NONE;    }      // 进度条等待时灭显示
 130   2           else if(ClearFlg == ON) 
 131   2             { ClearFlg = OFF; led_sts = led_flash_NO = LED_NONE; }
 132   2           else{ led_sts = led_flash_NO;   led_mode = led_flash_mode; } 
 133   2        }
 134   1      
 135   1      
 136   1        // 判断是否点亮状态
 137   1        if(led_sts == LED_NONE)
 138   1        { led_light_ctrl(LED_NONE);  }  // 全灭
 139   1        else
 140   1        { // 电路状态
 141   2          if(led_mode == LED_FLASH_MODE_ALWAYS) // 常亮显示
 142   2          { led_light_ctrl(led_sts); }      // 仅点亮对应颜色
 143   2          else  if(sys.led_flash_count == 0)    // 闪烁显示，时间到
 144   2          {
 145   3            //当前灯为灭状态
 146   3            if(led_flash_status == 0)
 147   3            { //灯灭计数器到，切换到灯亮状态，并且设置改变灯亮周期参数
 148   4              led_light_ctrl(led_sts);        // 仅点亮对应颜色
 149   4              led_flash_status = 1;         // 切换到灯亮状态
 150   4              sys.led_flash_count = GetLedOnTime(); // 取灯亮时间
 151   4            }
 152   3            //当前为亮灯
 153   3            else
 154   3            { //灯亮计数器到，切换到灯灭状态，并且设置改变灯灭周期参数
 155   4              led_light_ctrl(LED_NONE);       // 全灭
 156   4              led_flash_status = 0;         // 切换到灯灭状态
 157   4              sys.led_flash_count = GetLedOffTime();  // 取灯灭时间
 158   4            }
 159   3          }
 160   2        } 
 161   1      }
 162          
 163          /*******************************************************************************
 164                          END         
 165          *******************************************************************************/
 166          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    346    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
