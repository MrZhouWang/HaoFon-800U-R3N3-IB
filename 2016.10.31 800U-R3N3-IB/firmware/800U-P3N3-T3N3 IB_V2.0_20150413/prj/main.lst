C51 COMPILER V9.52.0.0   MAIN                                                              11/14/2016 12:11:10 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\UV4\main.obj
COMPILER INVOKED BY: C:\Program Files\kile\C51\BIN\C51.EXE ..\src\main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRI
                    -NT(.\main.lst) TABS(2) OBJECT(..\UV4\main.obj)

line level    source

   1          /*=========================================================
   2          // 程序更改说明
   3          //  2015年2月12日更改  版本v1.0
   4          //   1.在800U-T3N3_V1.2的基础上修改，将触控按键改为普通按键
   5               2.其它功能不变
   6          //   MCU:STC15W408AS   8K Flash  512RAM  EEPROM 5K    UART 分组可当三组用 SOP16封装，14个IO口，
   7                   内带晶振和上电复位电路
   8          
   9          // 功能说明
  10          F1参数 保存的是任务完成后灯亮的颜色，共有0~7，8种颜色，默认无
  11          F2参数 进度条的基准时间
  12          F3参数 按键按下的灯颜色，共有0~8，9种，0~7对应各自的颜色，8为不变
  13          
  14          工作状态下
  15          按下按键，灯根据F3的设置，亮对应的灯
  16          松开时，任务全部完成亮F1灯颜色，未完成，先灭，再延时进度时间，再亮通讯下发的灯色
  17          非工作状态下
  18          按下按键，灯根据F3的设置，亮对应的灯
  19          松开时，灭
  20          设置状态下
  21          正在设置地址亮绿灯
  22          设置完成亮蓝灯
  23          清除命令，则灭灯
  24          
  25          // 2014年11月10日更改
  26          1. F3 变量名更改为KeyPressLed，=8时则亮灯颜色为上个状态+1，超过7则变1
  27          2. 开机只亮红绿蓝
  28          3. 工作完成后，灯状态不清除，除非来清除命令
  29          4. FT PTL 软件任务完成时会发清除命令，勾F1功能则不发清除命令
  30          5. 按键灯亮颜色优先于清除命令的灯颜色
  31          
  32          // 2014年12月19日更改 V1.1
  33          1. 参数存储和命名和P6一致
  34          2. 通讯重发判断同P6一致
  35          3. 触摸按键灵敏度还是32比较合适
  36          4. 按键按下的值默认为蓝色
  37          5. 锁定则不扫描按键，原来扫描按键但不执行
  38          
  39          // 2014年12月24日更改 V1.2
  40          1. 广播可设定灵敏度，0xA0,灵敏度为32~48，不在此范围内则恢复到默认值32
  41          
  42          //2015年4月7日更改为800U-P3N3-T3N3 IB_V2.0_20150407
  43          1.在800U-T3N3_V1.2基础上，增加物理按键功能，并通过条件编译选择触控功能或者按压功能
  44          2.触控最灵敏级别由原来的32改为10
  45          3.删除部分注释掉的功能重复的函数的代码
  46          
  47          =========================================================*/
  48          
  49          #define AP_CPU_GLOBALS  
  50          #include "extern_symbol.h" 
  51          
  52          /*******************************************************************************
  53                      系统参数复位
  54          *******************************************************************************/
C51 COMPILER V9.52.0.0   MAIN                                                              11/14/2016 12:11:10 PAGE 2   

  55          void sys_data_reset(void)
  56          {
  57   1          UINT8 i;
  58   1      
  59   1      //  ucFocus         = 0;
  60   1        LastSoftGetOkCount = 0;
  61   1          task_unfinish_num =0;     
  62   1          task_finished_num =0;
  63   1      
  64   1          for(i=0; i< MAX_TASK_NUM; i++)
  65   1          {
  66   2              task_unfinish_NO[i] =0;    
  67   2              task_un_goods_numH[i] =0;
  68   2              task_un_goods_numL[i] =0; 
  69   2              
  70   2              ///已完成任务块
  71   2      
  72   2              task_finished_NO[i] =0;    
  73   2              task_ed_goods_numH[i] =0;
  74   2              task_ed_goods_numL[i] =0; 
  75   2          }
  76   1        sys.digital_led_load_cnt = 0;
  77   1        digital_led_loading = OFF;       
  78   1        sys.beWaitNewData = OFF;
  79   1        f_repeat        = FALSE;     // 清重复接收到任务标志
  80   1        beSettingAddr = 0;
  81   1      }
  82          
  83          /*******************************************************************************
  84                      1毫秒延迟函数
  85          *******************************************************************************/
  86          void Delay1Ms() 
  87          {
  88   1          UINT16 i = 852;
  89   1          while (i != 0) {i--;}
  90   1      }
  91          
  92          /*******************************************************************************
  93                      毫秒延迟函数
  94              input   usDelay     延迟时间值
  95            output  none
  96          *******************************************************************************/
  97          
  98          void DelayMs(UINT16 usDelay)
  99          {
 100   1          for(; usDelay>0; usDelay--)
 101   1          {
 102   2              Delay1Ms();
 103   2          }   
 104   1      }
 105          
 106          /*******************************************************************************
 107                        端口初始化
 108          *******************************************************************************/
 109          void IO_Init(void)
 110          {
 111   1        //开漏输出  PxM1和PxM0对应配成11
 112   1        P3M1 = 0x0C;           // SDA和SCL口配成开漏，3.3V
 113   1        P3M0 = 0x0C;  
 114   1      
 115   1        P1M1 = 0x1C;           // BLUE和RED和GREEN口配成开漏，5V
 116   1        P1M0 = 0x1C;
C51 COMPILER V9.52.0.0   MAIN                                                              11/14/2016 12:11:10 PAGE 3   

 117   1        //推挽输出 PxM1和PxM0对应配成01
 118   1        P1M1 &= (~0x03);        // 485CTL配成推挽，5V
 119   1        P1M0 |= 0x03;   
 120   1      
 121   1      
 122   1        //IO状态初始化
 123   1        led_light_ctrl(LED_NONE);
 124   1      
 125   1      //  sys.flag = OFF;
 126   1      //  sys.count= 2;
 127   1      
 128   1      //  address[0] = 0xff;
 129   1      //  address[1] = 0xff;
 130   1      //  address[2] = 0xff;
 131   1      //  baudrate   = BD_38400;
 132   1      }
 133          
 134          /***************************************************
 135              T0定时器初始化
 136          ***************************************************/
 137          #define TH0_INIT        0xf8
 138          #define TL0_INIT        0xcc
 139          
 140          void InitT0(void)
 141          {
 142   1          //定时1ms//默认为12T模式=>T0_CLK=SYS_CLK/12=11 059 200 /12 =921600
 143   1          TMOD = (TMOD & 0xf0) | 0x01;    //mode 1: 16 bit counter
 144   1          TH0  = TH0_INIT;
 145   1          TL0  = TL0_INIT;  
 146   1      
 147   1          ET0  = 1;                       //allow interrupt
 148   1          TR0  = 1;                       //open timer0
 149   1      }
 150          
 151          /*******************************************************************************
 152            定时器T0中断服务程序(ms中断)
 153            Input :   中断向量
 154            Output :  sys.flag 置为有效 2ms
 155          *******************************************************************************/
 156          
 157          void timer0_int (void) interrupt 1
 158          { 
 159   1      //    p_Test = ~p_Test;
 160   1          TH0  = TH0_INIT;
 161   1          TL0  = TL0_INIT;  
 162   1      
 163   1      //    sys.flag  = ON;
 164   1          //串口缓冲区有数据
 165   1          if (uart.rIndex != 0)       
 166   1          {
 167   2              if (uart.rTimer-- == 0) 
 168   2              {
 169   3            uart.rFlag  = ON;    
 170   3              }
 171   2          }
 172   1      
 173   1        // 按键扫描计数时间
 174   1        if(Key.SysCnt++ >= TIMER_COUNT_32ms )
 175   1        { f_KeyEnable = TRUE; Key.SysCnt = 0; }
 176   1      
 177   1          //递减计算器，自减1
 178   1          if (sys.digital_led_load_cnt != 0)
C51 COMPILER V9.52.0.0   MAIN                                                              11/14/2016 12:11:10 PAGE 4   

 179   1              sys.digital_led_load_cnt--;    
 180   1          
 181   1          //递减计算器，自减1
 182   1      //    if (sys.count != 0)
 183   1      //        sys.count--;
 184   1      
 185   1          //递减计算器，自减1
 186   1          if (sys.led_flash_count != 0)
 187   1              sys.led_flash_count--;
 188   1      
 189   1       }
 190          
 191          /*******************************************************************************
 192                      开机自检测程序
 193              input:   none     
 194            output:  none
 195          *******************************************************************************/
 196          
 197          void Start_Init(void)
 198          {
 199   1        sys_data_reset();
 200   1      
 201   1        led_light_ctrl(LED_RED);
 202   1        DelayMs(500);
 203   1        led_light_ctrl(LED_GREEN);
 204   1        DelayMs(500);
 205   1        led_light_ctrl(LED_BLUE);
 206   1        DelayMs(500);
 207   1          
 208   1      //  led_light_ctrl(LED_RG);
 209   1      //  DelayMs(500);
 210   1      //  led_light_ctrl(LED_RB);
 211   1      //  DelayMs(500);
 212   1      //  led_light_ctrl(LED_GB);
 213   1      //  DelayMs(500);
 214   1        led_light_ctrl(LED_NONE);
 215   1        CurDispMode = DISPMODE_NONE;
 216   1      }
 217          
 218          /*******************************************************************************
 219                        main program        
 220          *******************************************************************************/   
 221          int main(void) 
 222          {   
 223   1        EA = 0;
 224   1        IO_Init();
 225   1      
 226   1        DelayMs(300);       // 等待电源稳定
 227   1        
 228   1        InitT0();
 229   1        
 230   1        UART_Init();        //
 231   1      
 232   1        Start_Init();     // 灯亮状态
 233   1        
 234   1        LoadParaInEeprom();     // 读取灵敏度值
 235   1          
 236   1          #if ( MACHINETYPE == T3N3_IB_800U)
 237   1             CBM7008_init();      // 必须开机后200ms再设置灵敏度  
 238   1          #endif
 239   1          
 240   1        EA = 1;         //使能中断
C51 COMPILER V9.52.0.0   MAIN                                                              11/14/2016 12:11:10 PAGE 5   

 241   1      
 242   1        Display_Clear();
 243   1      
 244   1      //  uart.wBuffer[0] = 0x55;
 245   1      //  SendSerialByte(&para.Byte[0],MAX_CFGPARA);
 246   1      //  SendSerialByte((UINT8 *)uart.wBuffer,1);
 247   1      //  SendSerialByte(&lmd[0], 8);
 248   1      //  uart.wBuffer[0] = 0xAA;
 249   1      //  SendSerialByte((UINT8 *)uart.wBuffer,1);
 250   1      
 251   1        p_m485_ctrl = 0;              // 关闭发送DE端口，打开接收/RE485端口
 252   1        led_flash_period = 300;           //闪烁周期控制
 253   1        led_flash_mode   = LED_FLASH_MODE_ALWAYS ;  //长亮模式
 254   1        TaskStats      = TASK_NONE;   // 非工作状态
 255   1        ClearFlg     = OFF;
 256   1        Key.b.Short    = FALSE;       // 短按释放
 257   1        Key.b.LongOnce = FALSE;       // 长按一次释放 
 258   1        Key.b.Long     = FALSE;       // 长按释放
 259   1        SystemLocked   = OFF;       // 系统解锁
 260   1        CurDispMode    = DISPMODE_NONE;   // 当前任务状态设为非运行状态
 261   1          
 262   1        while(1)
 263   1        {       
 264   2           CMD_led_flash(); 
 265   2           Key_Scan();              
 266   2      
 267   2           if (uart.rFlag == ON)
 268   2           {          
 269   3             Cmd_Process();
 270   3             uart.rFlag   = OFF;
 271   3             uart.rIndex  = 0;
 272   3           }
 273   2      
 274   2           if((digital_led_loading == ON))
 275   2           {
 276   3             if(sys.digital_led_load_cnt == 0)
 277   3             {
 278   4               digital_led_loading = OFF;
 279   4               sys.beWaitNewData = OFF;                 
 280   4             }
 281   3           }
 282   2      
 283   2        }   
 284   1      }
 285          
 286          /*******************************************************************************
 287                          END         
 288          *******************************************************************************/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    459    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    104    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     33    ----
   IDATA SIZE       =     34    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
